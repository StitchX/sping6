<?xml version="1.0" encoding="UTF-8" ?>
<!--monitorInterval属性值（秒数）为一个非零值来让Log4j每隔指定的秒数来重新读取配置文件，可以用来动态应用Log4j配置-->
<configuration>
    <!--定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!-- ]evel指定日志级别，从低到高的优先级:
            TRACE < DEBUG < INFO < WARN < ERROR < FATAL
                trace: 追踪，是最低的日志级别。相当于追踪程序的执行
                debug: 调试，一般在开发中，都将其设置为最低的日志级别
                info: 信息，输出重要的信息，使用较多
                warn: 警告，输出警告的信息
                error: 错误，输出错误信息
                fatal:严重错误 -->
        <root level="DEBUG">
            <appender-ref ref="spring6log"/>
            <appender-ref ref="RollingFile"/>
            <appender-ref ref="log"/>
        </root>
    </loggers>
    <!--使用Appenders元素可以将日志事件数据写到各种目标位置-->
    <Appenders>
        <!-- 默认打印到控制台 -->
        <console name="spring6log" target="SYSTEM_OUT">
            <!-- 默认打印格式 -->
            <PatternLayout pattern="%d{yyy-MM-dd HH:mm:ss SSS} [%t] %-3level %logger{1024} - %msg%n"/>
        </console>
        <!-- 打印到日志文件上 -->
        <File name="log" fileName="d:/spring6_log/fileLog.log" append="false">
            <PatternLayout>
                <pattern>"%d{HH:mm:ss.SSS} [%t] %-5level %class{36} - %msg%xEx%n"</pattern>
            </PatternLayout>
        </File>

        <!-- 这个会打印出所有的信息每次大小超过size，
        则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩作为存档 -->

        <!--        定义一个可滚动的文件输出日志组件-->
        <RollingFile name="RollingFile" fileName="d:/spring6_log/app.log"
                     filePattern="log/$${date:yyyy-MM-dd}/app-%d{yyyy-MM-dd-HH-mm}-%i.log">
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %msg%n"/>
            <SizeBasedTriggeringPolicy size="50 MB"/>
            <!-- DefaultRolloverStrategy属性如不设置则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </Appenders>

</configuration>